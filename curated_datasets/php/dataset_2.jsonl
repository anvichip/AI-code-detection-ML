{"code": "$result = collect([2, 10, 3, 4, 15, 20])\n    ->filter(function ($value) {\n        return $value >= 10; // Filter out numbers less than 10\n    })\n    ->map(function ($value) {\n        return pow($value, 2); // Calculate the square of the remaining numbers\n    })\n    ->average(); // Compute the average of the squared numbers\n\necho $result; // Output the result\n", "writer": "AI"}
{"code": "function fetch_latest_posts_by_category($atts) {\n    // Extract category ID from shortcode attributes\n    $atts = shortcode_atts(array(\n        'cat_id' => '1', // default category ID\n    ), $atts);\n\n    // Define and execute the SQL query to get the latest 10 posts from the specified category\n    global $wpdb;\n    $query = $wpdb->prepare(\n        \"SELECT p.ID, p.post_title, p.post_excerpt, p.post_date\n        FROM $wpdb->posts p\n        INNER JOIN $wpdb->term_relationships tr ON p.ID = tr.object_id\n        INNER JOIN $wpdb->term_taxonomy tt ON tr.term_taxonomy_id = tt.term_taxonomy_id\n        WHERE tt.taxonomy = 'category' AND tt.term_id = %d\n        AND p.post_status = 'publish'\n        ORDER BY p.post_date DESC LIMIT 10\",\n        $atts['cat_id']\n    );\n    $posts = $wpdb->get_results($query);\n\n    // Start building the output\n    $output = '<ul class=\"latest-posts\">';\n    foreach ($posts as $post) {\n        $post_date = date(\"F j, Y\", strtotime($post->post_date)); // Format the date\n        $output .= sprintf(\n            '<li><h2>%s</h2><p>%s</p><small>%s</small></li>',\n            esc_html($post->post_title),\n            esc_html($post->post_excerpt),\n            esc_html($post_date)\n        );\n    }\n    $output .= '</ul>';\n\n    // Add some basic CSS for the output\n    $output .= '\n    <style>\n        .latest-posts li {\n            list-style: none;\n            padding: 10px;\n            border-bottom: 1px solid #ccc;\n        }\n        .latest-posts h2 {\n            margin: 0 0 5px 0;\n        }\n        .latest-posts p {\n            margin: 0;\n        }\n        .latest-posts small {\n            color: #666;\n        }\n    </style>';\n\n    return $output;\n}\n\n// Register the shortcode [latest_posts cat_id=\"X\"]\nadd_shortcode('latest_posts', 'fetch_latest_posts_by_category');\n", "writer": "AI"}
{"code": "<?php\n\nfunction getTopThreeWords($text) {\n    // Normalize the text: lower case and remove punctuation\n    $normalizedText = strtolower(preg_replace(\"/[^\\w\\s]/\", \"\", $text));\n\n    // Split the text into words\n    $words = explode(\" \", $normalizedText);\n    \n    // Count the frequency of each word\n    $wordCount = array_count_values($words);\n\n    // Sort the array based on frequency in descending order\n    arsort($wordCount);\n\n    // Get the top three most frequent words\n    $topThree = array_slice($wordCount, 0, 3);\n    \n    // Format the output to show word and count\n    $result = [];\n    foreach ($topThree as $word => $count) {\n        $result[] = [$word, $count];\n    }\n    \n    return $result;\n}\n\n// Example usage\n$input = \"The quick brown fox jumps over the lazy dog. The dog was lazy!\";\n$output = getTopThreeWords($input);\nprint_r($output);\n?>\n", "writer": "AI"}
{"code": "$input->filter(function ($number) \n        return $number >= 10;\n    })\n    ->map(function ($number) {\n        return $number ** 2;\n    })\n    ->average();", "writer": "Human"}
{"code": "<ul>\n  \n<?php\n// Define our WP Query Parameters\n$the_query = new WP_Query( 'posts_per_page=5' ); ?>\n  \n<?php\n// Start our WP Query\nwhile ($the_query -> have_posts()) : $the_query -> the_post();\n// Display the Post Title with Hyperlink\n?>\n  \n<li><a href=\"<?php the_permalink() ?>\"><?php the_title(); ?></a></li>\n  \n<li><?php\n// Display the Post Excerpt\nthe_excerpt(__('(more\u2026)')); ?></li>\n  \n<?php\n// Repeat the process and reset once it hits the limit\nendwhile;\nwp_reset_postdata();\n?>\n</ul>", "writer": "Human"}
{"code": "<?php\nfunction getTopThreeWords($text) {\n// Remove punctuation and convert to lowercase\n$words = str_word_count(strtolower(preg_replace('/[^\\p{L}\\p{N}\\s]/u', ' ', $text)), 1);\n\n// Count the frequency of each word\n$wordFrequency = array_count_values($words);\n\n// Sort the words by frequency in descending order\narsort($wordFrequency);\n\n// Get the top three words\n$topThreeWords = array_slice($wordFrequency, 0, 3, true);\n\n// Format the output\n$output = [];\nforeach ($topThreeWords as $word => $count) {\n$output[] = \"('$word', $count)\";\n}\n\nreturn '[' . implode(', ', $output) . ']';\n}\n\n// Example usage:\n$inputText = \"The quick brown fox jumps over the lazy dog. The dog was lazy!\";\necho getTopThreeWords($inputText);\n?>", "writer": "Human"}
