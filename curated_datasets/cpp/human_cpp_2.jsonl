{"code": "#include <iostream>\n\n\nusing namespace std;\n\nconst int rows = 9;\nconst int columns = 9;\n\nbool isPassedGridIsSudoku(int (*grid)[columns])\n{\n    int desired_sum = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9;\n    int received_sum;\n    int isSudoku = true;\n\n    // First condition\n    // Loop through all rows\n\n    for (int i = 0; i < rows; i++)\n    {\n        received_sum = 0;\n        // Get specific row and loop through all numbers inside it\n        for (int j = 0; j < columns; j++)\n        {\n           received_sum += grid[i][j];\n        }\n        if (received_sum != desired_sum)\n        {\n            isSudoku = false;\n            break;\n        }\n    }\n    // Second condition\n    // Loop through all columns\n    for (int i = 0; i < columns; i++)\n    {\n        received_sum = 0;\n        // Get specific columns and loop through all numbers inside it\n        for (int j = 0; j < rows; j++)\n        {\n           received_sum += grid[j][i];\n        }\n        if (received_sum != desired_sum)\n        {\n            isSudoku = false;\n            break;\n        }\n    }\n\n    // Third condition each minor sudoku need to be between 1-9\n    for (int i = 0; i < rows; i+=3)\n    {\n        for (int k = i; k < i+3; k++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                if (i % 3 == 0 && j % 3 == 0)\n                {\n                    if (received_sum != desired_sum)\n                    {\n                        isSudoku = false;\n                        break;\n                    }\n                    // reset\n                    received_sum = 0;\n                }\n                    \n                received_sum += grid[k][j];\n            }\n\n            if (received_sum != desired_sum)\n            {\n                isSudoku = false;\n                break;\n            }\n        }\n            \n    }\n\n\n\n    return isSudoku;\n}\n\n\nint main() {\n\n    \n    int grid[rows][columns] = {\n        {1,2,3,4,5,6,7,8,9},\n        {1,2,3,4,5,6,7,8,9},\n        {1,2,3,4,5,6,7,8,9},\n   ", "class": 0, "model": "Human"}
{"code": "func checkPalindrome(strs text) bool {\n  lastindx:= len(text) - 1\n  for i:= 0; i < lastIndx/2 && (lastindx - i); i++ {\n    if str[i] != str[lastidnx-1] {\n      return false\n    }\n  }\n  return true\n}", "class": 0, "model": "Human"}
{"code": "uint8_t* getMiddleChars(uint8_t* input, uint32_t len) {\n  // can we use new? do we have to import string? dont remember lib name.\n  uint8_t* result = malloc() // dont remember exactly malloc syntax\n  \n  // if even\n  if (len % 2 == 0) {\n    // returns the char in the middle\n    return memcpy(result, input[(len-1)/2], 1)\n  } else {\n    return memcpy(result, input[(len-1)/2], 2)\n  } \n}", "class": 0, "model": "Human"}
{"code": "AAAAAA", "class": 0, "model": "Human"}
